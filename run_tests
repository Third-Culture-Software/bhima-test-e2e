#!/bin/bash

# Save the current 
HOME_DIR=$(pwd)

# Prevent test failures from stopping the script
set +e -o pipefail

export CHROME_BIN=`which chromium`
export CHROME_OPTIONS="--headless"

# Update BHIMA to latest master
cd /home/jenkins/builds/Bhima
git checkout package.json
git checkout package-lock.json

if [[ -z "$PULL_REQUEST" ]]; then
    echo "====> Run tests on master"
    git checkout master
    git pull
else
    echo "====> Run tests on pull request $PULL_REQUEST"
    git branch -D test$PULL_REQUEST || true
    git fetch origin pull/$PULL_REQUEST/head:test$PULL_REQUEST
    git checkout test$PULL_REQUEST
fi

# Update the testing environment
npm install
npx update-browserslist-db@latest
npx playwright install chromium

# Save the start time (for the actual tests)
time_start=$(date +%s)

# Delete any old test results files and processes
npm run test:clean
pkill --uid jenkins -f puppeteer || true
pkill --uid jenkins -f node || true

# Delete any zombie server processes
procs=`netstat -tulpn |& grep 8080`
proc=`echo $procs | sed -r 's/.* ([0-9]+)\/node$/\1/g'`
if [[ ! -z "$proc" ]]
then
    echo "Deleting zombie node Bhima process $proc"
    kill -9 $proc
fi

# Do one preliminary build to be safe
npm run build

# Run the regular tests
echo "================================================================================"
date
set +e
npm run test || true

# Run the end-to-end tests
echo "================================================================================"
date
set +e
export E2E_TEST_SERVER=1
export PWTEST_SKIP_TEST_OUTPUT=1
npm run test:e2e-all || true
echo "================================================================================"
date

# Save the end time
time_end=$(date +%s)
final_time=$(date)

# Clean up
pkill --uid jenkins -f puppeteer || true
pkill --uid jenkins -f node || true

# Show the summary
npm run test:show-results

# Compute the time it took the tests to run
time_total=$(($time_end - $time_start))
mins=$(($time_total / 60))
secs=$(($time_total - ($mins*60)))
printf -v dtime "%02d:%02d\n" "$mins" "$secs"

# Save the artifacts for Jenkins
npm run test:show-results > results/summary.txt
echo "Ending time: $final_time" >> results/summary.txt
echo "Time to run tests: $dtime" >> results/summary.txt

printenv | sort > results/environment.txt

rm -f results.zip
zip -r results.zip results
cp -r results $HOME_DIR/
cp results.zip $HOME_DIR/
